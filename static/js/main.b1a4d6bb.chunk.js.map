{"version":3,"sources":["api/api.js","store/store.js","components/user/User.js","components/todoitem/TodoItem.js","components/table/TodoList.js","components/app/App.js","components/app/index.js","index.js"],"names":["loadData","url","fetch","then","response","json","startLoading","type","handleError","handleSuccess","todosWithUsers","initialState","isLoading","hasError","store","createStore","state","arguments","length","undefined","action","_objectSpread","Object","toConsumableArray","sort","a","b","event","user","name","localeCompare","completed","title","todos","map","todo","users","find","id","userId","applyMiddleware","thunk","User","_ref","react_default","createElement","href","concat","email","TodoItem","user_User","Table","Cell","positive","negative","TodoList","Fragment","Button","onClick","celled","Header","Row","HeaderCell","Body","todoitem_TodoItem","key","App","sortTodos","getData","table_TodoList","ImprovedApp","connect","sortedTodos","dispatch","Promise","all","_ref2","slicedToArray","getTodosWithUsers","catch","ReactDOM","render","es","document","getElementById"],"mappings":"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","file":"static/js/main.b1a4d6bb.chunk.js","sourcesContent":["const loadData = url => fetch(url)\n  .then(response => response.json());\n\nexport default loadData;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport loadData from '../api/api';\n\nconst START_LOADING = 'START_LOADING';\nconst HANDLE_ERROR = 'HANDLE_ERROR';\nconst HANDLE_SUCCESS = 'HANDLE_SUCCESS';\nconst HANDLE_SORT = 'HANDLE_SORT';\nconst GET_DATA = 'GET_DATA'\n\nconst usersUrl = 'https://jsonplaceholder.typicode.com/users';\nconst todosUrl = 'https://jsonplaceholder.typicode.com/todos';\n\nconst getTodosWithUsers = (todos, users) => ({\n  type: GET_DATA,\n  todos,\n  users,\n});\n\nexport const getData = () => (dispatch) => {\n  dispatch(startLoading());\n\n  Promise.all([loadData(todosUrl), loadData(usersUrl)])\n    .then(([todos, users]) => {\n      dispatch(startLoading());\n      dispatch(getTodosWithUsers(todos, users));\n      dispatch(handleSuccess());\n    })\n    .catch(() => dispatch(handleError()));\n};\n\nexport const startLoading = () => ({ type: START_LOADING });\nexport const handleError = () => ({ type: HANDLE_ERROR });\n\nexport const handleSort = event => ({\n  type: HANDLE_SORT,\n  event,\n});\n\nexport const handleSuccess = todosWithUsers => ({\n  type: HANDLE_SUCCESS,\n  todosWithUsers,\n});\n\nconst initialState = {\n  isLoading: false,\n  todosWithUsers: [],\n  hasError: false,\n};\n\nconst reducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case HANDLE_SORT:\n      return {\n        ...state,\n        todosWithUsers: [...state.todosWithUsers].sort((a, b) => {\n          switch (action.event) {\n            case 'userName':\n              return a.user.name.localeCompare(b.user.name);\n            case 'completed':\n              return b.completed - a.completed;\n            default:\n              return a.title.localeCompare(b.title);\n          }\n        }),\n      };\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n      };\n    case HANDLE_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true,\n      };\n    case HANDLE_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    case GET_DATA:\n      return {\n        ...state,\n        todosWithUsers: action.todos.map(todo => ({\n          ...todo,\n          user: action.users.find(user => user.id === todo.userId),\n        })),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer, applyMiddleware(thunk));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <td><a href={`mailto:${user.email}`}>{user.name}</a></td>\n);\n\nexport default User;\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n    email: PropTypes.string,\n    phone: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport User from '../user/User';\n\nconst TodoItem = ({ todo }) => (\n  <tr>\n    <td>{todo.title}</td>\n    <User user={todo.user} />\n    {todo.completed\n      ? <Table.Cell positive>Completed</Table.Cell>\n      : <Table.Cell negative>In progress</Table.Cell>\n    }\n  </tr>\n);\n\nexport default TodoItem;\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n    user: PropTypes.object,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Button } from 'semantic-ui-react';\nimport TodoItem from '../todoitem/TodoItem';\n\nconst TodoList = ({ todos, sort }) => (\n  <>\n    <Button\n      type=\"button\"\n      onClick={sort}\n    >\n      Sort by title\n    </Button>\n    <Button\n      type=\"button\"\n      onClick={() => sort('userName')}\n    >\n      Sort by name\n    </Button>\n    <Button\n      type=\"button\"\n      onClick={() => sort('completed')}\n    >\n      Sort by completed\n    </Button>\n\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Todo</Table.HeaderCell>\n          <Table.HeaderCell>User email</Table.HeaderCell>\n          <Table.HeaderCell>Is completed</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {todos.map(todo => (\n          <TodoItem todo={todo} key={todo.id} />\n        ))}\n      </Table.Body>\n    </Table>\n  </>\n);\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sort: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../App.css';\nimport { Button } from 'semantic-ui-react';\nimport TodoList from '../table/TodoList';\n\nconst App = ({\n  todosWithUsers,\n  isLoading,\n  hasError,\n  sortTodos,\n  getData,\n}) => {\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  if (hasError) {\n    return (\n      <>\n        <p>Loading failed</p>\n        <Button type=\"button\" onClick={getData}>Retry</Button>\n      </>\n    );\n  }\n\n  if (!todosWithUsers.length) {\n    return <Button type=\"button\" onClick={getData}>Load</Button>;\n  }\n\n  return (\n    <TodoList\n      todos={todosWithUsers}\n      sort={sortTodos}\n    />\n  );\n};\n\nApp.propTypes = {\n  sortTodos: PropTypes.func.isRequired,\n  getData: PropTypes.func.isRequired,\n  todosWithUsers: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.number,\n    }).isRequired,\n  ).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  hasError: PropTypes.bool.isRequired,\n};\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport { handleSort, getData } from '../../store/store';\n\nconst mapStateToProps = state => ({\n  isLoading: state.isLoading,\n  todosWithUsers: state.todosWithUsers,\n  hasError: state.hasError,\n  sortedTodos: state.sortedTodos,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getData: () => dispatch(getData()),\n  sortTodos: sort => dispatch(handleSort(sort)),\n});\n\nconst ImprovedApp = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n\nexport {\n  ImprovedApp as App,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { App } from './components/app';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}