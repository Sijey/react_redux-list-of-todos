{"version":3,"sources":["store/store.js","components/user/User.js","components/todoitem/TodoItem.js","components/table/TodoList.js","api/api.js","App.js","index.js"],"names":["store","createStore","state","action","type","_objectSpread","todosWithUsers","Object","toConsumableArray","sort","a","b","event","user","name","localeCompare","completed","title","isLoading","hasError","User","_ref","react_default","createElement","href","concat","email","TodoItem","todo","user_User","Table","Cell","positive","negative","TodoList","todos","Fragment","Button","onClick","celled","Header","Row","HeaderCell","Body","map","todoitem_TodoItem","key","id","getData","url","fetch","then","response","json","App","_this$props","_this","props","initLoad","loadSuccess","catchError","Promise","all","_ref2","slicedToArray","users","App_objectSpread","find","item","userId","catch","_this$props2","this","sortTodos","length","table_TodoList","React","Component","connect","sortedTodos","dispatch","handleSuccess","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"sxBAEA,IA+DaA,EAAQC,YAvCL,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAvBgB,cAwBd,OAAAC,EAAA,GACKH,EADL,CAEEI,eAAgBC,OAAAC,EAAA,EAAAD,CAAIL,EAAMI,gBAAgBG,KAAK,SAACC,EAAGC,GACjD,OAAQR,EAAOS,OACb,IAAK,WACH,OAAOF,EAAEG,KAAKC,KAAKC,cAAcJ,EAAEE,KAAKC,MAC1C,IAAK,YACH,OAAOH,EAAEK,UAAYN,EAAEM,UACzB,QACE,OAAON,EAAEO,MAAMF,cAAcJ,EAAEM,YAIzC,IAxCkB,gBAyChB,OAAAZ,EAAA,GACKH,EADL,CAEEgB,WAAW,EACXC,UAAU,IAEd,IA7CiB,eA8Cf,OAAAd,EAAA,GACKH,EADL,CAEEgB,WAAW,EACXC,UAAU,IAEd,IAlDmB,iBAmDjB,OAAAd,EAAA,GACKH,EADL,CAEEI,eAAgBH,EAAOG,eACvBY,WAAW,IAEf,QACE,OAAOhB,IAzCQ,CACnBgB,WAAW,EACXZ,eAAgB,GAChBa,UAAU,qFChBGC,EAJF,SAAAC,GAAA,IAAGR,EAAHQ,EAAGR,KAAH,OACXS,EAAAZ,EAAAa,cAAA,UAAID,EAAAZ,EAAAa,cAAA,KAAGC,KAAI,UAAAC,OAAYZ,EAAKa,QAAUb,EAAKC,QCkB9Ba,EAjBE,SAAAN,GAAA,IAAGO,EAAHP,EAAGO,KAAH,OACfN,EAAAZ,EAAAa,cAAA,UACED,EAAAZ,EAAAa,cAAA,UAAKK,EAAKX,OACVK,EAAAZ,EAAAa,cAACM,EAAD,CAAMhB,KAAMe,EAAKf,OAChBe,EAAKZ,UACJM,EAAAZ,EAAAa,cAACO,EAAA,EAAMC,KAAP,CAAYC,UAAQ,GAApB,aAIAV,EAAAZ,EAAAa,cAACO,EAAA,EAAMC,KAAP,CAAYE,UAAQ,GAApB,iBC8BSC,EAvCE,SAAAb,GAAA,IAAGc,EAAHd,EAAGc,MAAO1B,EAAVY,EAAUZ,KAAV,OACfa,EAAAZ,EAAAa,cAAAD,EAAAZ,EAAA0B,SAAA,KACEd,EAAAZ,EAAAa,cAACc,EAAA,EAAD,CACEjC,KAAK,SACLkC,QAAS,kBAAM7B,MAFjB,iBAMAa,EAAAZ,EAAAa,cAACc,EAAA,EAAD,CACEjC,KAAK,SACLkC,QAAS,kBAAM7B,EAAK,cAFtB,gBAMAa,EAAAZ,EAAAa,cAACc,EAAA,EAAD,CACEjC,KAAK,SACLkC,QAAS,kBAAM7B,EAAK,eAFtB,qBAOAa,EAAAZ,EAAAa,cAACO,EAAA,EAAD,CAAOS,QAAM,GACXjB,EAAAZ,EAAAa,cAACO,EAAA,EAAMU,OAAP,KACElB,EAAAZ,EAAAa,cAACO,EAAA,EAAMW,IAAP,KACEnB,EAAAZ,EAAAa,cAACO,EAAA,EAAMY,WAAP,aACApB,EAAAZ,EAAAa,cAACO,EAAA,EAAMY,WAAP,mBACApB,EAAAZ,EAAAa,cAACO,EAAA,EAAMY,WAAP,uBAGJpB,EAAAZ,EAAAa,cAACO,EAAA,EAAMa,KAAP,KACGR,EAAMS,IAAI,SAAAhB,GAAI,OACbN,EAAAZ,EAAAa,cAACsB,EAAD,CAAUjB,KAAMA,EAAMkB,IAAKlB,EAAKmB,WCpC7BC,EAAU,SAAAC,GAAG,OAAIC,MAAMD,GACjCE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,0OCcvBC,6MACJN,QAAU,WAAM,IAAAO,EAKVC,EAAKC,MAHPC,EAFYH,EAEZG,SACAC,EAHYJ,EAGZI,YACAC,EAJYL,EAIZK,WAMFF,IAEAG,QAAQC,IAAI,CAACd,EALI,8CAKeA,EAJf,gDAKdG,KAAK,SAAA9B,GAAoB,IAAA0C,EAAAxD,OAAAyD,EAAA,EAAAzD,CAAAc,EAAA,GAAlB4C,EAAkBF,EAAA,GAClBzD,EADkByD,EAAA,GACKnB,IAAI,SAAAhB,GAAI,4VAAAsC,CAAA,GAChCtC,EADgC,CAEnCf,KAAMoD,EAAME,KAAK,SAAAC,GAAI,OAAIA,EAAKrB,KAAOnB,EAAKyC,aAE5CV,EAAYrD,KAEbgE,MAAM,WACLV,+EAIG,IAAAW,EAMHC,KAAKf,MAJPnD,EAFKiE,EAELjE,eACAY,EAHKqD,EAGLrD,UACAC,EAJKoD,EAILpD,SACAsD,EALKF,EAKLE,UAGF,OAAIvD,EACKI,EAAAZ,EAAAa,cAAA,uBAGLJ,EAEAG,EAAAZ,EAAAa,cAAAD,EAAAZ,EAAA0B,SAAA,KACEd,EAAAZ,EAAAa,cAAA,2BACAD,EAAAZ,EAAAa,cAACc,EAAA,EAAD,CAAQjC,KAAK,SAASkC,QAASkC,KAAKxB,SAApC,UAKD1C,EAAeoE,OAKlBpD,EAAAZ,EAAAa,cAACoD,EAAD,CACExC,MAAO7B,EACPG,KAAMgE,IANDnD,EAAAZ,EAAAa,cAACc,EAAA,EAAD,CAAQjC,KAAK,SAASkC,QAASkC,KAAKxB,SAApC,eAhDK4B,IAAMC,WAyFTC,cA7BS,SAAA5E,GAAK,MAAK,CAChCgB,UAAWhB,EAAMgB,UACjBZ,eAAgBJ,EAAMI,eACtBa,SAAUjB,EAAMiB,SAChB4D,YAAa7E,EAAM6E,cAGM,SAAAC,GAAQ,MAAK,CACtCtB,SAAU,kBAAMsB,EL5EiB,CAAE5E,KALf,mBKkFpBuD,YAAa,SAAArD,GAAc,OAAI0E,ELrEJ,SAAA1E,GAAc,MAAK,CAC9CF,KAZqB,iBAarBE,kBKmEwC2E,CAAc3E,KACtDsD,WAAY,kBAAMoB,EL7Ec,CAAE5E,KALf,kBKmFnBqE,UAAW,SAAAhE,GAAI,OAAIuE,EL5Ee,CAClC5E,KANkB,cAOlBQ,MK0EuCH,OAkB1BqE,CAA6CxB,GClG5D4B,IAASC,OACP7D,EAAAZ,EAAAa,cAAC6D,EAAA,EAAD,CAAUpF,MAAOA,GACfsB,EAAAZ,EAAAa,cAAC8D,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.d2369cc8.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst START_LOADING = 'START_LOADING';\nconst HANDLE_ERROR = 'HANDLE_ERROR';\nconst HANDLE_SUCCESS = 'HANDLE_SUCCESS';\nconst HANDLE_SORT = 'HANDLE_SORT';\n\nexport const startLoading = () => ({ type: START_LOADING });\nexport const handleError = () => ({ type: HANDLE_ERROR });\n\nexport const handleSort = event => ({\n  type: HANDLE_SORT,\n  event,\n});\n\nexport const handleSuccess = todosWithUsers => ({\n  type: HANDLE_SUCCESS,\n  todosWithUsers,\n});\n\nconst initialState = {\n  isLoading: false,\n  todosWithUsers: [],\n  hasError: false,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case HANDLE_SORT:\n      return {\n        ...state,\n        todosWithUsers: [...state.todosWithUsers].sort((a, b) => {\n          switch (action.event) {\n            case 'userName':\n              return a.user.name.localeCompare(b.user.name);\n            case 'completed':\n              return b.completed - a.completed;\n            default:\n              return a.title.localeCompare(b.title);\n          }\n        }),\n      };\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n      };\n    case HANDLE_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true,\n      };\n    case HANDLE_SUCCESS:\n      return {\n        ...state,\n        todosWithUsers: action.todosWithUsers,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer, initialState);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <td><a href={`mailto:${user.email}`}>{user.name}</a></td>\n);\n\nexport default User;\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n    email: PropTypes.string,\n    phone: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport User from '../user/User';\n\nconst TodoItem = ({ todo }) => (\n  <tr>\n    <td>{todo.title}</td>\n    <User user={todo.user} />\n    {todo.completed ? (\n      <Table.Cell positive>\n        Completed\n      </Table.Cell>\n    ) : (\n      <Table.Cell negative>\n        In progress\n      </Table.Cell>\n    )\n    }\n  </tr>\n);\n\nexport default TodoItem;\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n    user: PropTypes.object,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Button } from 'semantic-ui-react';\nimport TodoItem from '../todoitem/TodoItem';\n\nconst TodoList = ({ todos, sort }) => (\n  <>\n    <Button\n      type=\"button\"\n      onClick={() => sort()}\n    >\n      Sort by title\n    </Button>\n    <Button\n      type=\"button\"\n      onClick={() => sort('userName')}\n    >\n      Sort by name\n    </Button>\n    <Button\n      type=\"button\"\n      onClick={() => sort('completed')}\n    >\n      Sort by completed\n    </Button>\n\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Todo</Table.HeaderCell>\n          <Table.HeaderCell>User email</Table.HeaderCell>\n          <Table.HeaderCell>Is completed</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {todos.map(todo => (\n          <TodoItem todo={todo} key={todo.id} />\n        ))\n        }\n      </Table.Body>\n    </Table>\n  </>\n);\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sort: PropTypes.func.isRequired,\n};\n","export const getData = url => fetch(url)\n  .then(response => response.json());\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport { Button } from 'semantic-ui-react';\nimport TodoList from './components/table/TodoList';\nimport { getData } from './api/api';\n\nimport {\n  startLoading,\n  handleError,\n  handleSuccess,\n  handleSort,\n} from './store/store';\n\nclass App extends React.Component {\n  getData = () => {\n    const {\n      initLoad,\n      loadSuccess,\n      catchError,\n    } = this.props;\n\n    const usersUrl = 'https://jsonplaceholder.typicode.com/users';\n    const todosUrl = 'https://jsonplaceholder.typicode.com/todos';\n\n    initLoad();\n\n    Promise.all([getData(usersUrl), getData(todosUrl)])\n      .then(([users, todos]) => {\n        const todosWithUsers = todos.map(todo => ({\n          ...todo,\n          user: users.find(item => item.id === todo.userId),\n        }));\n        loadSuccess(todosWithUsers);\n      })\n      .catch(() => {\n        catchError();\n      });\n  };\n\n  render() {\n    const {\n      todosWithUsers,\n      isLoading,\n      hasError,\n      sortTodos,\n    } = this.props;\n\n    if (isLoading) {\n      return <p>Loading...</p>;\n    }\n\n    if (hasError) {\n      return (\n        <>\n          <p>Loading failed</p>\n          <Button type=\"button\" onClick={this.getData}>Retry</Button>\n        </>\n      );\n    }\n\n    if (!todosWithUsers.length) {\n      return <Button type=\"button\" onClick={this.getData}>Load</Button>;\n    }\n\n    return (\n      <TodoList\n        todos={todosWithUsers}\n        sort={sortTodos}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.isLoading,\n  todosWithUsers: state.todosWithUsers,\n  hasError: state.hasError,\n  sortedTodos: state.sortedTodos,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  initLoad: () => dispatch(startLoading()),\n  loadSuccess: todosWithUsers => dispatch(handleSuccess(todosWithUsers)),\n  catchError: () => dispatch(handleError()),\n  sortTodos: sort => dispatch(handleSort(sort)),\n});\n\nApp.propTypes = {\n  initLoad: PropTypes.func.isRequired,\n  loadSuccess: PropTypes.func.isRequired,\n  catchError: PropTypes.func.isRequired,\n  sortTodos: PropTypes.func.isRequired,\n  todosWithUsers: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.number,\n    }).isRequired,\n  ).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  hasError: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}